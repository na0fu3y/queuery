(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{143:function(e,t,r){"use strict";r.d(t,"a",(function(){return p})),r.d(t,"b",(function(){return f}));var n=r(0),a=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=a.a.createContext({}),d=function(e){var t=a.a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},p=function(e){var t=d(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,l=u(e,["components","mdxType","originalType","parentName"]),p=d(r),b=n,f=p["".concat(i,".").concat(b)]||p[b]||s[b]||o;return r?a.a.createElement(f,c(c({ref:t},l),{},{components:r})):a.a.createElement(f,c({ref:t},l))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=b;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c.mdxType="string"==typeof e?e:n,i[1]=c;for(var l=2;l<o;l++)i[l]=r[l];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,r)}b.displayName="MDXCreateElement"},91:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return c})),r.d(t,"toc",(function(){return u})),r.d(t,"default",(function(){return d}));var n=r(3),a=r(7),o=(r(0),r(143)),i={id:"automl-tables-dataset-cleaner",title:"AutoML Tables \u63a8\u8ad6\u7d50\u679c\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u5927\u6383\u9664",author:"Naofumi Yamada",author_title:"Data Engineer",author_url:"https://github.com/na0fu3y",author_image_url:"https://avatars0.githubusercontent.com/u/17900178?s=400&v=4",tags:["bigquery"]},c={permalink:"/blog/2020/01/25/automl-tables-dataset-cleaner",editUrl:"https://github.com/na0fu3y/queuery/edit/master/blog/2020-01-25-automl-tables-dataset-cleaner.md",source:"@site/blog/2020-01-25-automl-tables-dataset-cleaner.md",description:"\u3084\u308b\u3053\u3068",date:"2020-01-25T00:00:00.000Z",tags:[{label:"bigquery",permalink:"/blog/tags/bigquery"}],title:"AutoML Tables \u63a8\u8ad6\u7d50\u679c\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u5927\u6383\u9664",readingTime:.335,truncated:!0,prevItem:{title:"BigQuery \u30c6\u30fc\u30d6\u30eb\u540c\u58eb\u306e\u4e00\u81f4\u5224\u5b9a",permalink:"/blog/2020/01/26/two-tables-have-exactly-the-same-data-in-bigquery"},nextItem:{title:"Stackdriver Logging \u3092\u7528\u3044\u3066 BigQuery \u30c6\u30fc\u30d6\u30eb\u306e\u6700\u7d42\u53c2\u7167\u65e5\u3092\u6c42\u3081\u308b",permalink:"/blog/2020/01/21/bigquery-last-reference-date"}},u=[],l={toc:u};function d(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},l,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"\u3084\u308b\u3053\u3068"},"\u3084\u308b\u3053\u3068"),Object(o.b)("p",null,"BigQuery \u306b\u305f\u307e\u3063\u305f AutoML \u306e\u63a8\u8ad6\u7d50\u679c\u3092\u5168\u90e8\u524a\u9664\u3059\u308b\u3002\nBigQuery \u306f\u30011000 \u3088\u308a\u591a\u304f\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u304c\u3042\u308b\u3068\u3001\u4f5c\u6210\u304c\u53e4\u3044\u9806\u306b Web UI \u304b\u3089\u898b\u308c\u306a\u304f\u306a\u308b\u3002AutoML \u306e\u63a8\u8ad6\u7d50\u679c\u306f\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u5897\u3084\u3057\u3084\u3059\u3044\u306e\u3067\u3001\u305f\u307e\u306b\u304a\u6383\u9664\u3059\u308b\u3002"),Object(o.b)("h1",{id:"python"},"Python"),Object(o.b)("p",null,"\u3068\u3066\u3082\u5371\u967a\u306a\u306e\u3067\u3001dry_run \u3067\u7d50\u679c\u3092\u5fc5\u305a\u78ba\u8a8d\u3057\u3066\u5b9f\u884c\u3059\u308b\u3053\u3068\u3002"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),"import re\nfrom google.cloud import bigquery\n\ndry_run = True\nproject_id = 'your-project'\n\nclient = bigquery.Client(project_id)\npattern = re.compile(r'prediction_[a-zA-Z0-9_]+_20\\d\\d_\\d\\d_\\d\\dT\\d\\d_\\d\\d_\\d\\d_\\d\\d\\dZ')\n\n# list() \u3057\u306a\u3044\u3068 list_datasets \u306e paging \u306b\u5bfe\u3057\u3066\u3046\u307e\u304f\u52d5\u4f5c\u3057\u306a\u3044\ndatasets = (dataset for dataset in list(client.list_datasets()) if pattern.match(dataset.dataset_id))\n\nfor dataset in datasets:\n    print(\"{}\".format(dataset.dataset_id))\n    if not dry_run:\n        client.delete_dataset(dataset.reference, delete_contents=True)\n")),Object(o.b)("h1",{id:"\u7d50\u679c"},"\u7d50\u679c"),Object(o.b)("p",null,"\u5927\u6383\u9664\u3067\u304d\u308b\u3002\u6b63\u898f\u8868\u73fe\u3067\u30de\u30c3\u30c1\u3057\u3066\u524a\u9664\u306f\u304a\u624b\u8efd\u3060\u3051\u3069\u3001\u78ba\u8a8d\u3057\u306a\u304c\u3089\u3084\u3089\u306a\u3044\u3068\u4f7f\u3063\u3066\u308b\u7269\u3082\u6d88\u3059\u306e\u3067\u6ce8\u610f\u3057\u3088\u3046\u3002"))}d.isMDXComponent=!0}}]);